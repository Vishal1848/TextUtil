{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yogesh\\\\Downloads\\\\TextUtils-master\\\\TextUtils-master\\\\src\\\\components\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  // here text is the state inside my TextForm Functional\n  // component and setText is my Update function for the\n  // input text here, 'Enter Text Here' is the default\n  // value for the state text\n  // useState must be inside your functional component\n  // This is Array destructuring syntax in JS\n  // you can't update text like any normal variable\n  // you need to use your update function (setText in\n  // our case) to do so\n  const [text, setText] = useState(\"\");\n  const [fWord, findWord] = useState(\"\");\n  const [rWord, replaceWord] = useState(\"\"); //   text = \"new text\" this is a wrong way to change value of a state, you must use setText(your update function to do so)\n  // setText(\"Hello\");\n\n  const handleUpClick = () => {\n    let s = text;\n    setText(s.toUpperCase());\n    props.showAlert(\"Converted to UpperCase\", \"success\");\n  };\n\n  const handleLowClick = () => {\n    let s = text;\n    setText(s.toLowerCase());\n    props.showAlert(\"Converted to LowerCase\", \"success\");\n  };\n\n  const handleClear = () => {\n    let s = \" \";\n    setText(s);\n    props.showAlert(\"Cleared text\", \"success\");\n  };\n\n  const handleSpaces = () => {\n    let s = text.split(\" \").join(\"\");\n    setText(s);\n  };\n\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n\n  const handlefindChange = event => {\n    findWord(event.target.value);\n  };\n\n  const handleReplaceChange = event => {\n    console.log(replaceWord(event.target.value));\n  };\n\n  const handleReplaceClick = () => {\n    let newText = text.replaceAll(fWord, rWord);\n    setText(newText);\n    props.showAlert(\"Replaced the word\", \"success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"myBox\",\n          rows: \"8\",\n          value: text,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Find Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"myBox\",\n          rows: \"1\",\n          value: fWord,\n          onChange: handlefindChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Replace Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"myBox\",\n          rows: \"1\",\n          value: rWord,\n          onChange: handleReplaceChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mx-1 my-4\",\n          onClick: handleReplaceClick,\n          children: \"Replace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleUpClick,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1.5\",\n        onClick: handleLowClick,\n        children: \"Convert to LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1 my-3\",\n        onClick: handleClear,\n        children: \"Clear text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1 my-3\",\n        onClick: handleSpaces,\n        children: \"Remove Blank Space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.length === 0 ? 0 : text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estimated Reading Time for the text\", \" \", Math.round(0.008 * text.split(\" \").length), \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"/jhDn30qOQclCBQrVSVLJBbGYeE=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","TextForm","props","text","setText","fWord","findWord","rWord","replaceWord","handleUpClick","s","toUpperCase","showAlert","handleLowClick","toLowerCase","handleClear","handleSpaces","split","join","handleOnChange","event","target","value","handlefindChange","handleReplaceChange","console","log","handleReplaceClick","newText","replaceAll","heading","length","Math","round"],"sources":["C:/Users/yogesh/Downloads/TextUtils-master/TextUtils-master/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  // here text is the state inside my TextForm Functional\n  // component and setText is my Update function for the\n  // input text here, 'Enter Text Here' is the default\n  // value for the state text\n\n  // useState must be inside your functional component\n  // This is Array destructuring syntax in JS\n  // you can't update text like any normal variable\n  // you need to use your update function (setText in\n  // our case) to do so\n  const [text, setText] = useState(\"\");\n  const [fWord, findWord] = useState(\"\");\n  const [rWord, replaceWord] = useState(\"\");\n\n  //   text = \"new text\" this is a wrong way to change value of a state, you must use setText(your update function to do so)\n  // setText(\"Hello\");\n  const handleUpClick = () => {\n    let s = text;\n    setText(s.toUpperCase());\n    props.showAlert(\"Converted to UpperCase\", \"success\")\n  };\n  const handleLowClick = () => {\n    let s = text;\n    setText(s.toLowerCase());\n    props.showAlert(\"Converted to LowerCase\", \"success\")\n  };\n  const handleClear = () => {\n    let s = \" \";\n    setText(s);\n    props.showAlert(\"Cleared text\", \"success\")\n  };\n  const handleSpaces = () => {\n    let s = text.split(\" \").join(\"\");\n    setText(s);\n  };\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n  };\n  const handlefindChange = (event) => {\n    findWord(event.target.value);\n  };\n  const handleReplaceChange = (event) => {\n  console.log(replaceWord(event.target.value)) ;\n  };\n  const handleReplaceClick = () => {\n    let newText = text.replaceAll(fWord,rWord);\n    setText(newText);\n    props.showAlert(\"Replaced the word\", \"success\")\n  };\n\n\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            id=\"myBox\"\n            rows=\"8\"\n            value={text}\n            onChange={handleOnChange}\n          ></textarea>\n          <h3>Find Words</h3>\n          <textarea\n            className=\"form-control\"\n            id=\"myBox\"\n            rows=\"1\"\n            value={fWord}\n            onChange={handlefindChange}\n          ></textarea>\n          <h3>Replace Words</h3>\n          <textarea\n            className=\"form-control\"\n            id=\"myBox\"\n            rows=\"1\"\n            value={rWord}\n            onChange={handleReplaceChange}\n          ></textarea>\n          <button className=\"btn btn-primary mx-1 my-4\" onClick={handleReplaceClick}>\n          Replace\n        </button>\n        </div>\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\n          Convert to UpperCase\n        </button>\n        <button className=\"btn btn-primary mx-1.5\" onClick={handleLowClick}>\n          Convert to LowerCase\n        </button>\n        {/* <br /> */}\n        <button className=\"btn btn-primary mx-1 my-3\" onClick={handleClear}>\n          Clear text\n        </button>\n        {/* <br /> */}\n        <button className=\"btn btn-primary mx-1 my-3\" onClick={handleSpaces}>\n          Remove Blank Space\n        </button>\n      </div>\n      <div className=\"container my-2\">\n        <h2>Your Text Summary</h2>\n        <p>\n          {text.length === 0 ?  0 : text.split(\" \").length} words and {text.length} characters\n        </p>\n        <p>\n          Estimated Reading Time for the text{\" \"}\n          {Math.round(0.008 * text.split(\" \").length)} minutes\n        </p>\n        <h2>Preview</h2>\n        <p>{text}</p>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}